#!/usr/bin/env ruby

# Unlight
# Copyright (c) 2019 CPA
# Copyright (c) 2019 Open Unlight
# This software is released under the Apache 2.0 License.
# https://opensource.org/licenses/Apache2.0

require 'bundler'
$LOAD_PATH.unshift Bundler.root.join('lib')
$LOAD_PATH.unshift Bundler.root.join('src')

require 'bootstrap'
require 'protocol/globalchatserver'

# TODO: Use single boot server entrypoint by type
ARGV.push('-t global_chat')

module Unlight
  include Protocol

  Dawn::Bootstrap.new(GlobalChatServer).start do
    EM::PeriodicTimer.new(RAID_HELP_SEND_TIME) do
      GlobalChatServer.sending_help_list
    rescue StandardError => e
      Unlight::Container[:logger].fatal('Sending help list failed', e)
    end

    EM::PeriodicTimer.new(60) do
      GlobalChatServer.check_connection
    rescue StandardError => e
      Unlight::Container[:logger].fatal('Check connection failed', e)
    end

    if PRF_AUTO_CREATE_EVENT_FLAG
      EM::PeriodicTimer.new(PRF_AUTO_CREATE_INTERVAL) do
        GlobalChatController.auto_create_prf
      rescue StandardError => e
        Unlight::Container[:logger].fatal('Auto create profound failed', e)
      end

      EM::PeriodicTimer.new(PRF_AUTO_HELP_INTERVAL) do
        GlobalChatController.auto_prf_send_help
      rescue StandardError => e
        Unlight::Container[:logger].fatal('Send profound help failed', e)
      end
    end
  end
end
