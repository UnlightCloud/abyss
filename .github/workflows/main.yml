name: Test

on:
  push:
    branches:
      - main
  pull_request:

env:
  RUBY_VERSION: 3.2.2

jobs:
  rubocop:
    runs-on: ubuntu-latest
    name: rubocop
    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
    - name: Run rubocop
      run: bundle exec rubocop -P
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        command:
          - rspec
          - cucumber
    name: ${{ matrix.command }}
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_USER: unlight
          MYSQL_PASSWORD: unlight
          MYSQL_DATABASE: unlight_db
          MYSQL_ROOT_PASSWORD: unlight
        ports:
          - 3306
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10
      memcached:
        image: memcached:alpine
        ports:
          - 11211
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
    - name: Prepare Database
      run: bin/abyss upgrade --no-import --no-cpu-decks
      env:
        MEMCACHED_HOST: "127.0.0.1:${{ job.services.memcached.ports['11211'] }}"
        DATABASE_URL: "mysql2://unlight:unlight@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/unlight_db?encoding=utf8"
    - name: Run ${{ matrix.command }}
      run: bundle exec ${{ matrix.command }}
      env:
        CUCUMBER_PUBLISH_TOKEN: ${{ secrets.CUCUMBER_PUBLISH_TOKEN }}
        MEMCACHED_HOST: "127.0.0.1:${{ job.services.memcached.ports['11211'] }}"
        DATABASE_URL: "mysql2://unlight:unlight@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/unlight_db?encoding=utf8"
    - name: Archive RSpec coverage report
      uses: actions/upload-artifact@v3
      with:
        name: simplecov-resultset-${{ matrix.command }}
        path: coverage/
        retention-days: 1
  coverage-report:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
    - name: Download RSpec coverage report
      uses: actions/download-artifact@v3
      with:
        name: simplecov-resultset-rspec
        path: simplecov-resultset-rspec/
    - name: Download Cucumber coverage report
      uses: actions/download-artifact@v3
      with:
        name: simplecov-resultset-cucumber
        path: simplecov-resultset-cucumber/
    - name: Upload coverage report
      if: ${{ github.ref_name == 'main' }}
      uses: paambaati/codeclimate-action@v5.0.0
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: bundle exec rake coverage:report
