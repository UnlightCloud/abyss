# イベント定義
# dsc:
#   説明文
#     "説明"
# context:*
#   実行可能な文脈 （登録した条件の一つでも合致すれば実行）。指定なければ必ず実行。
#     obj, event, ...
# guard:*
#   実行条件 （登録した条件の一つでも合致すれば実行）。指定なければ必ず実行。
#   ["reciver",:method],...<-配列すべてがTrueの時のみTrue
# goal:*
#   終了条件 （登録した条件の一つでも成功すれば成功）。指定なければ必ず終了。Hookの場合は逆に終了しない。
#   ["reciver",:method],...<-配列すべてがTrueの時のみTrue
# type:
#   関数はいつ実行されるのか
#   直ちに実行           type=>:instant < default
#   なにかの前に行われる type=>:before, :obj=>"reciver", :hook=>:method ,:priority =>0
#   なにかの後に行われ   type=>:after, :obj=>"reciver", :hook=>:method,:priority =>0
#   なにかを置き換える   type=>:proxy, :obj=>"reciver", :hook=>:method
#   (priorityは値の低い順に実行される。使用可能なのは整数のみ)
# duration:
#   終了しない場合どれくらい続くか？(Hook系のイベントには使用できない)
#   終わらない       :none <default
#   複数回           type=>:times, value=>x
#   秒               type=>:sec, value=>x
# event: (Hook系のイベントには使用できない)
#   イベントを発行するか？
#   実行前     :start
#   実行後     :finish
#   発行しない :< default
# func:
#   実行関数（hookする関数）
# act:
#   追加実行されるイベント
module Unlight
end

# ===========================
# ターン定義
# ===========================
class Unlight::ThreeToThreeDuel < Unlight::EventRule
end

class Unlight::StartTurnPhase < Unlight::EventRule
end

class Unlight::RefillCardPhase < Unlight::EventRule
end

class Unlight::RefillEventCardPhase < Unlight::EventRule
end

class Unlight::MoveCardDropPhase < Unlight::EventRule
end

class Unlight::DetermineMovePhase < Unlight::EventRule
end

class Unlight::FinishMovePhase < Unlight::EventRule
end

class Unlight::CharaChangePhase < Unlight::EventRule
end

class Unlight::DetermineCharaChangePhase < Unlight::EventRule
end

class Unlight::AttackCardDropPhase < Unlight::EventRule
end

class Unlight::DeffenceCardDropPhase < Unlight::EventRule
end

class Unlight::DetermineBattlePointPhase < Unlight::EventRule
end

class Unlight::BattleResultPhase < Unlight::EventRule
end

class Unlight::DamagePhase < Unlight::EventRule
end

class Unlight::ChangeInitiativePhase < Unlight::EventRule
end

class Unlight::DeadCharaChangePhase < Unlight::EventRule
end

class Unlight::DetermineDeadCharaChangePhase < Unlight::EventRule
end

class Unlight::FinishTurnPhase < Unlight::EventRule
end

class Unlight::FinishGameEvent < Unlight::EventRule
end
