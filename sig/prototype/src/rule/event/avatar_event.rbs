# イベント定義
# dsc:
#   説明文
#     "説明"
# context:*
#   実行可能な文脈
#     ["obj", :event], ...
# guard:*
#   実行条件 （登録した条件の一つでも合致すれば実行）。指定なければ必ず実行。
#   ["reciver",:method],...
# goal:*
#   終了条件 （登録した条件の一つでも成功すれば成功）。指定なければ必ず終了。Hookの場合は逆に終了しない。
#   ["reciver",:method],...
# type:
#   関数はいつ実行されるのか
#   直ちに実行           type=>:instant < default
#   なにかの前に行われる type=>:before, :obj=>"reciver", :hook=>:method ,:priority =>0
#   なにかの後に行われ   type=>:after, :obj=>"reciver", :hook=>:method,:priority =>0
#   なにかを置き換える   type=>:proxy, :obj=>"reciver", :hook=>:method
#   (priorityは値の低い順に実行される。使用可能なのは整数のみ)
# duration:
#   終了しない場合どれくらい続くか？(Hook系のイベントには使用できない)
#   終わらない       :none <default
#   複数回           type=>:times, value=>x
#   秒               type=>:sec, value=>x
# event:
#   イベントを発行するか？
#   実行前     :start     (add_start_listener_xxx(method:yyyy), 返値:target)
#   実行後     :finish    (add_finish_listener_xxx(method:yyyy),返値:taeget,ret)
#   発行しない :< default
# func:
#   実行関数（hookする関数）
# act:
#   追加実行されるイベント
module Unlight
end

class Unlight::UseEnergyEvent < EventRule
end

class Unlight::UseFreeDuelCountEvent < EventRule
end

class Unlight::UpdateEnergyMaxEvent < EventRule
end

class Unlight::UpdateRemainTimeEvent < EventRule
end

class Unlight::GetExpEvent < EventRule
end

class Unlight::LevelUpEvent < EventRule
end

class Unlight::GetDeckExpEvent < EventRule
end

class Unlight::DeckLevelUpEvent < EventRule
end

class Unlight::UpdateGemsEvent < EventRule
end

class Unlight::UpdateResultEvent < EventRule
end

class Unlight::ItemGetEvent < EventRule
end

class Unlight::ItemUseEvent < EventRule
end

class Unlight::CoinUseEvent < EventRule
end

class Unlight::PartGetEvent < EventRule
end

class Unlight::SlotCardGetEvent < EventRule
end

class Unlight::CharaCardGetEvent < EventRule
end

class Unlight::QuestGetEvent < EventRule
end

class Unlight::QuestStateUpdateEvent < EventRule
end

class Unlight::QuestDeletedEvent < EventRule
end

class Unlight::QuestProgressUpdateEvent < EventRule
end

class Unlight::QuestDeckStateUpdateEvent < EventRule
end

class Unlight::QuestFlagUpdateEvent < EventRule
end

# By_K2
class Unlight::FloorCountUpdateEvent < EventRule
end

class Unlight::QuestClearNumUpdateEvent < EventRule
end

class Unlight::QuestFindAtUpdateEvent < EventRule
end

class Unlight::EventQuestFlagUpdateEvent < EventRule
end

class Unlight::EventQuestClearNumUpdateEvent < EventRule
end

class Unlight::UpdateFriendMaxEvent < EventRule
end

class Unlight::UpdatePartMaxEvent < EventRule
end

class Unlight::GetQuestTreasureEvent < EventRule
end

class Unlight::UpdateRecoveryIntervalEvent < EventRule
end

class Unlight::UpdateQuestInventoryMaxEvent < EventRule
end

class Unlight::UpdateExpPowEvent < EventRule
end

class Unlight::UpdateGemPowEvent < EventRule
end

class Unlight::UpdateQuestFindPowEvent < EventRule
end

class Unlight::UpdateQuestPointEvent < EventRule
end

class Unlight::VanishPartEvent < EventRule
end

class Unlight::AchievementClearEvent < EventRule
end

class Unlight::AddNewAchievementEvent < EventRule
end

class Unlight::DeleteAchievementEvent < EventRule
end

class Unlight::UpdateRankEvent < EventRule
end

class Unlight::StartSaleEvent < EventRule
end

class Unlight::DeckGetEvent < EventRule
end

class Unlight::UpdateAchievementInfoEvent < EventRule
end

class Unlight::DropAchievementEvent < EventRule
end

class Unlight::SendProfoundInfoEvent < EventRule
end

class Unlight::ResendProfoundInventoryEvent < EventRule
end

class Unlight::ResendProfoundInventoryFinishEvent < EventRule
end

class Unlight::ChangeFavoriteCharaIdEvent < EventRule
end

class Unlight::UpdateCombineWeaponDataEvent < EventRule
end
